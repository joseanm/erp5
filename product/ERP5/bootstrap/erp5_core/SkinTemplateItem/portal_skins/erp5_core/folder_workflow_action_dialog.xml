<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<tal:block xmlns:tal="http://xml.zope.org/namespaces/tal"\n
           xmlns:metal="http://xml.zope.org/namespaces/metal"\n
           xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n
  <tal:block metal:define-macro="master">\n
    <tal:block tal:define="local_parameter_list local_parameter_list | python: {};\n
         choosen_action python: request.get(\'choosen_action\') or [x for x in request.get(\'workflow_action_listbox\').values() if x[\'workflow_action\']][0];\n
         target_context python: context.getPortalObject().restrictedTraverse(choosen_action[\'relative_url\']);\n
         target_form python: getattr(target_context, choosen_action[\'workflow_action\'].split(\'/\')[-1]);\n
         dummy python: request.set(\'workflow_action\', choosen_action[\'workflow_action\'].split(\'/\')[1]);\n
         dummy python: request.set(\'here\', here);\n
         dummy python: request.set(\'mass_workflow_action\', True);\n
         dummy python: request.set(\'button_title\', target_context.Base_getFormViewDialogActionButtonTitle(target_form));\n
         dummy python: local_parameter_list.update({ \n
                   \'choosen_action\': choosen_action,\n
                   \'cancel_url\': request[\'cancel_url\'],\n
                   \'mass_workflow_action\': request[\'mass_workflow_action\'],\n
                 });">\n
     <tal:block metal:use-macro="here/dialog_main/macros/master">\n
\n
      <tal:block metal:define-macro="head">\n
       <tal:block metal:fill-slot="head">\n
        <tal:block tal:define="head_group python: form.get_fields_in_group(\'head\')">\n
          <div tal:condition="python: len(head_group) > 0"\n
               class="head">\n
            <tal:block tal:repeat="field head_group">\n
              <tal:block tal:condition="preferred_html_style_developper_mode">\n
                <tal:block metal:use-macro="developper_shortcut_render/macros/field_developper" />\n
              </tal:block>\n
              <tal:block tal:define="field_description field/Field_getDescription"\n
                         tal:condition="preferred_html_style_translator_mode">\n
                <tal:block metal:use-macro="developper_shortcut_render/macros/field_translator" />\n
              </tal:block>\n
              <tal:block tal:define="value python:request.get(field.id, None)"\n
                         tal:replace="structure python:field.render(value, request)" />\n
            </tal:block>\n
          </div>\n
        </tal:block>\n
       </tal:block>\n
      </tal:block>\n
\n
      <tal:block metal:fill-slot="main">\n
        <tal:block tal:define="field_render here/field_render/macros/field_render;">\n
          <tal:block tal:condition="preferred_html_style_developper_mode">\n
            <tal:block metal:use-macro="developper_shortcut_render/macros/form" />\n
          </tal:block>\n
\n
          <div class="dialog_box">\n
\n
          <tal:block metal:define-macro="content">\n
            <div class="content"\n
                 tal:define="group_list target_form/Form_getGroupTitleAndId">\n
              <tal:block tal:repeat="group group_list">\n
                <tal:block tal:define="gid    group/gid">\n
                  <fieldset tal:condition="python: \'hidden\' not in gid and \'bottom\' not in gid and \'head\' not in gid"\n
                    tal:attributes="class gid;">\n
                    <legend tal:content="group/gtitle" class="group_title" />\n
                    <tal:block tal:repeat="field python: target_form.get_fields_in_group(group[\'goid\'])">\n
                      <tal:block metal:use-macro="field_render"/>\n
                    </tal:block>\n
                  </fieldset>\n
                </tal:block>\n
              </tal:block>\n
              <p class="clear"></p>\n
            </div>\n
           </tal:block>\n
          </div>\n
        </tal:block>\n
      </tal:block>\n
\n
      <tal:block metal:define-macro="bottom">\n
       <tal:block metal:fill-slot="bottom">\n
        <tal:block tal:repeat="form python: [target_form, form]">\n
          <tal:block tal:define="bottom_group python: form.get_fields_in_group(\'bottom\')">\n
            <div tal:condition="python: len(bottom_group) > 0"\n
              class="bottom">\n
              <tal:block tal:repeat="field bottom_group">\n
                <tal:block tal:condition="preferred_html_style_developper_mode">\n
                  <tal:block metal:use-macro="developper_shortcut_render/macros/field_developper" />\n
                </tal:block>\n
                <tal:block tal:define="field_description field/Field_getDescription"\n
                           tal:condition="preferred_html_style_translator_mode">\n
                  <tal:block metal:use-macro="developper_shortcut_render/macros/field_translator" />\n
                </tal:block>\n
                <tal:block tal:define="value python:request.get(field.id, None)"\n
                           tal:replace="structure python:field.render(value, request)" />\n
              </tal:block>\n
            </div>\n
          </tal:block>\n
         </tal:block>\n
       </tal:block>\n
      </tal:block>\n
\n
\n
      </tal:block>\n
    </tal:block>\n
  </tal:block>\n
</tal:block>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>folder_workflow_action_dialog</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <unicode></unicode> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
