<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>"""\n
  Solve all alarms which starts with id as "promise_vifib*".\n
\n
  (rafael): This approach could be generalized on \n
      configurator level, by providing a list of \n
      alarms to be invoked always.\n
"""\n
alarm_to_solve_list = [\'promise_certificate_autority_tool\',\n
                       \'promise_conversion_server\'\n
                       \'promise_kumofs_server\'\n
                       \'promise_mailhost_configuration\'\n
                       \'promise_memcached_server\', \n
                       \'promise_configurator_shacache_website\']\n
\n
for alarm in context.portal_alarms.contentValues():\n
  alarm_id = alarm.getId()\n
  if alarm_id in alarm_to_solve_list:\n
    alarm.solve()\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>BusinessConfiguration_invokeShacachePromiseAlarmList</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
