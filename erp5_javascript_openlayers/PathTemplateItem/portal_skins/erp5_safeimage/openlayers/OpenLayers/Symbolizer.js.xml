<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.77</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>Symbolizer.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/BaseTypes/Class.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Symbolizer\n
 * Base class representing a symbolizer used for feature rendering.\n
 */\n
OpenLayers.Symbolizer = OpenLayers.Class({\n
    \n
\n
    /**\n
     * APIProperty: zIndex\n
     * {Number} The zIndex determines the rendering order for a symbolizer.\n
     *     Symbolizers with larger zIndex values are rendered over symbolizers\n
     *     with smaller zIndex values.  Default is 0.\n
     */\n
    zIndex: 0,\n
    \n
    /**\n
     * Constructor: OpenLayers.Symbolizer\n
     * Instances of this class are not useful.  See one of the subclasses.\n
     *\n
     * Parameters:\n
     * config - {Object} An object containing properties to be set on the \n
     *     symbolizer.  Any documented symbolizer property can be set at \n
     *     construction.\n
     *\n
     * Returns:\n
     * A new symbolizer.\n
     */\n
    initialize: function(config) {\n
        OpenLayers.Util.extend(this, config);\n
    },\n
    \n
    /** \n
     * APIMethod: clone\n
     * Create a copy of this symbolizer.\n
     *\n
     * Returns a symbolizer of the same type with the same properties.\n
     */\n
    clone: function() {\n
        var Type = eval(this.CLASS_NAME);\n
        return new Type(OpenLayers.Util.extend({}, this));\n
    },\n
    \n
    CLASS_NAME: "OpenLayers.Symbolizer"\n
    \n
});\n
\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>1556</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
