<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.95</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>v1_1_1_WMSC.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/Format/WMSCapabilities/v1_1_1.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Format.WMSCapabilities/v1_1_1_WMSC\n
 * Read WMS-C Capabilities version 1.1.1.\n
 * \n
 * Inherits from:\n
 *  - <OpenLayers.Format.WMSCapabilities.v1_1_1>\n
 */\n
OpenLayers.Format.WMSCapabilities.v1_1_1_WMSC = OpenLayers.Class(\n
    OpenLayers.Format.WMSCapabilities.v1_1_1, {\n
    \n
    /**\n
     * Property: version\n
     * {String} The specific parser version.\n
     */\n
    version: "1.1.1",\n
    \n
    /**\n
     * Property: profile\n
     * {String} The specific profile\n
     */\n
    profile: "WMSC",\n
    \n
    /**\n
     * Constructor: OpenLayers.Format.WMSCapabilities.v1_1_1\n
     * Create a new parser for WMS-C capabilities version 1.1.1.\n
     *\n
     * Parameters:\n
     * options - {Object} An optional object whose properties will be set on\n
     *     this instance.\n
     */\n
\n
    /**\n
     * Property: readers\n
     * Contains public functions, grouped by namespace prefix, that will\n
     *     be applied when a namespaced node is found matching the function\n
     *     name.  The function will be applied in the scope of this parser\n
     *     with two arguments: the node being read and a context object passed\n
     *     from the parent.\n
     */\n
    readers: {\n
        "wms": OpenLayers.Util.applyDefaults({\n
            "VendorSpecificCapabilities": function(node, obj) {\n
                obj.vendorSpecific = {tileSets: []};\n
                this.readChildNodes(node, obj.vendorSpecific);\n
            },\n
            "TileSet": function(node, vendorSpecific) {\n
                var tileset = {srs: {}, bbox: {}, resolutions: []};\n
                this.readChildNodes(node, tileset);\n
                vendorSpecific.tileSets.push(tileset);\n
            },\n
            "Resolutions": function(node, tileset) {\n
                var res = this.getChildValue(node).split(" ");\n
                for (var i=0, len=res.length; i<len; i++) {\n
                    if (res[i] != "") {\n
                        tileset.resolutions.push(parseFloat(res[i]));\n
                    }\n
                }\n
            },\n
            "Width": function(node, tileset) {\n
                tileset.width = parseInt(this.getChildValue(node));\n
            },\n
            "Height": function(node, tileset) {\n
                tileset.height = parseInt(this.getChildValue(node));\n
            },\n
            "Layers": function(node, tileset) {\n
                tileset.layers = this.getChildValue(node);\n
            },\n
            "Styles": function(node, tileset) {\n
                tileset.styles = this.getChildValue(node);\n
            }\n
        }, OpenLayers.Format.WMSCapabilities.v1_1_1.prototype.readers["wms"])\n
    },\n
\n
    CLASS_NAME: "OpenLayers.Format.WMSCapabilities.v1_1_1_WMSC" \n
\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2982</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
