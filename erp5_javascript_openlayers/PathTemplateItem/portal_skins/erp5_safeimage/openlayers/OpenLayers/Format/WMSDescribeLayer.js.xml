<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.92</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>WMSDescribeLayer.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/Format/XML/VersionedOGC.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Format.WMSDescribeLayer\n
 * Read SLD WMS DescribeLayer response\n
 * DescribeLayer is meant to couple WMS to WFS and WCS\n
 * \n
 * Inherits from:\n
 *  - <OpenLayers.Format.XML.VersionedOGC>\n
 */\n
OpenLayers.Format.WMSDescribeLayer = OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC, {\n
\n
    /**\n
     * APIProperty: defaultVersion\n
     * {String} Version number to assume if none found.  Default is "1.1.1".\n
     */\n
    defaultVersion: "1.1.1",\n
   \n
    /**\n
     * Method: getVersion\n
     * Returns the version to use. Subclasses can override this function\n
     * if a different version detection is needed.\n
     *\n
     * Parameters:\n
     * root - {DOMElement}\n
     * options - {Object} Optional configuration object.\n
     *\n
     * Returns:\n
     * {String} The version to use.\n
     */\n
    getVersion: function(root, options) {\n
        var version = OpenLayers.Format.XML.VersionedOGC.prototype.getVersion.apply(\n
            this, arguments);\n
        // these are identical to us, but some WMS use 1.1.1 and some use 1.1.0\n
        if (version == "1.1.1" || version == "1.1.0") {\n
            version = "1.1";\n
        }\n
        return version;\n
    },\n
\n
    /**\n
     * Constructor: OpenLayers.Format.WMSDescribeLayer\n
     * Create a new parser for WMS DescribeLayer responses.\n
     *\n
     * Parameters:\n
     * options - {Object} An optional object whose properties will be set on\n
     *     this instance.\n
     */\n
\n
    /**\n
     * APIMethod: read\n
     * Read DescribeLayer data from a string, and return the response. \n
     * The OGC currently defines 2 formats which are allowed for output,\n
     * so we need to parse these 2 types\n
     * \n
     * Parameters: \n
     * data - {String} or {DOMElement} data to read/parse.\n
     *\n
     * Returns:\n
     * {Array} Array of {<LayerDescription>} objects which have:\n
     * - {String} owsType: WFS/WCS\n
     * - {String} owsURL: the online resource\n
     * - {String} typeName: the name of the typename on the service\n
     */\n
    \n
    CLASS_NAME: "OpenLayers.Format.WMSDescribeLayer" \n
\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2353</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
