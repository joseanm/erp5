<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.97</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>v1_0_0.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/Format/WPSCapabilities.js\n
 * @requires OpenLayers/Format/OWSCommon/v1_1_0.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Format.WPSCapabilities.v1_0_0\n
 * Read WPS Capabilities version 1.0.0.\n
 * \n
 * Inherits from:\n
 *  - <OpenLayers.Format.XML>\n
 */\n
OpenLayers.Format.WPSCapabilities.v1_0_0 = OpenLayers.Class(\n
    OpenLayers.Format.XML, {\n
\n
    /**\n
     * Property: namespaces\n
     * {Object} Mapping of namespace aliases to namespace URIs.\n
     */\n
    namespaces: {\n
        ows: "http://www.opengis.net/ows/1.1",\n
        wps: "http://www.opengis.net/wps/1.0.0",\n
        xlink: "http://www.w3.org/1999/xlink"\n
    },\n
\n
    /**\n
     * Property: regExes\n
     * Compiled regular expressions for manipulating strings.\n
     */\n
    regExes: {\n
        trimSpace: (/^\\s*|\\s*$/g),\n
        removeSpace: (/\\s*/g),\n
        splitSpace: (/\\s+/),\n
        trimComma: (/\\s*,\\s*/g)\n
    },\n
    \n
    /**\n
     * Constructor: OpenLayers.Format.WPSCapabilities.v1_0_0\n
     * Create a new parser for WPS capabilities version 1.0.0. \n
     *\n
     * Parameters:\n
     * options - {Object} An optional object whose properties will be set on\n
     *     this instance.\n
     */\n
    initialize: function(options) {\n
        OpenLayers.Format.XML.prototype.initialize.apply(this, [options]);\n
    },\n
\n
    /**\n
     * APIMethod: read\n
     * Read capabilities data from a string, and return info about the WPS.\n
     * \n
     * Parameters: \n
     * data - {String} or {DOMElement} data to read/parse.\n
     *\n
     * Returns:\n
     * {Object} Information about the WPS service.\n
     */\n
    read: function(data) {\n
        if(typeof data == "string") {\n
            data = OpenLayers.Format.XML.prototype.read.apply(this, [data]);\n
        }\n
        if(data && data.nodeType == 9) {\n
            data = data.documentElement;\n
        }\n
        var capabilities = {};\n
        this.readNode(data, capabilities);\n
        return capabilities;\n
    },\n
\n
    /**\n
     * Property: readers\n
     * Contains public functions, grouped by namespace prefix, that will\n
     *     be applied when a namespaced node is found matching the function\n
     *     name.  The function will be applied in the scope of this parser\n
     *     with two arguments: the node being read and a context object passed\n
     *     from the parent.\n
     */\n
    readers: {\n
        "wps": {\n
            "Capabilities": function(node, obj) {\n
                this.readChildNodes(node, obj);\n
            },\n
            "ProcessOfferings": function(node, obj) {\n
                obj.processOfferings = {};\n
                this.readChildNodes(node, obj.processOfferings);\n
            },\n
            "Process": function(node, processOfferings) {\n
                var processVersion = this.getAttributeNS(node, this.namespaces.wps, "processVersion");\n
                var process = {processVersion: processVersion};\n
                this.readChildNodes(node, process);\n
                processOfferings[process.identifier] = process;\n
            },\n
            "Languages": function(node, obj) {\n
                obj.languages = [];\n
                this.readChildNodes(node, obj.languages);\n
            },\n
            "Default": function(node, languages) {\n
                var language = {isDefault: true};\n
                this.readChildNodes(node, language);\n
                languages.push(language);\n
            },\n
            "Supported": function(node, languages) {\n
                var language = {};\n
                this.readChildNodes(node, language);     \n
                languages.push(language);\n
            }\n
        },\n
        "ows": OpenLayers.Format.OWSCommon.v1_1_0.prototype.readers["ows"]\n
    },    \n
    \n
    CLASS_NAME: "OpenLayers.Format.WPSCapabilities.v1_0_0" \n
\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>3945</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
