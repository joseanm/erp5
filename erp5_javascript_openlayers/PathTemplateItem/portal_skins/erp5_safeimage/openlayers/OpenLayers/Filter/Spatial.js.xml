<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.82</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>Spatial.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/Filter.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Filter.Spatial\n
 * This class represents a spatial filter.\n
 * Currently implemented: BBOX, DWithin and Intersects\n
 * \n
 * Inherits from:\n
 * - <OpenLayers.Filter>\n
 */\n
OpenLayers.Filter.Spatial = OpenLayers.Class(OpenLayers.Filter, {\n
\n
    /**\n
     * APIProperty: type\n
     * {String} Type of spatial filter.\n
     *\n
     * The type should be one of:\n
     * - OpenLayers.Filter.Spatial.BBOX\n
     * - OpenLayers.Filter.Spatial.INTERSECTS\n
     * - OpenLayers.Filter.Spatial.DWITHIN\n
     * - OpenLayers.Filter.Spatial.WITHIN\n
     * - OpenLayers.Filter.Spatial.CONTAINS\n
     */\n
    type: null,\n
    \n
    /**\n
     * APIProperty: property\n
     * {String} Name of the context property to compare.\n
     */\n
    property: null,\n
    \n
    /**\n
     * APIProperty: value\n
     * {<OpenLayers.Bounds> || <OpenLayers.Geometry>} The bounds or geometry\n
     *     to be used by the filter.  Use bounds for BBOX filters and geometry\n
     *     for INTERSECTS or DWITHIN filters.\n
     */\n
    value: null,\n
\n
    /**\n
     * APIProperty: distance\n
     * {Number} The distance to use in a DWithin spatial filter.\n
     */\n
    distance: null,\n
\n
    /**\n
     * APIProperty: distanceUnits\n
     * {String} The units to use for the distance, e.g. \'m\'.\n
     */\n
    distanceUnits: null,\n
    \n
    /** \n
     * Constructor: OpenLayers.Filter.Spatial\n
     * Creates a spatial filter.\n
     *\n
     * Parameters:\n
     * options - {Object} An optional object with properties to set on the\n
     *     filter.\n
     * \n
     * Returns:\n
     * {<OpenLayers.Filter.Spatial>}\n
     */\n
\n
   /**\n
    * Method: evaluate\n
    * Evaluates this filter for a specific feature.\n
    * \n
    * Parameters:\n
    * feature - {<OpenLayers.Feature.Vector>} feature to apply the filter to.\n
    * \n
    * Returns:\n
    * {Boolean} The feature meets filter criteria.\n
    */\n
    evaluate: function(feature) {\n
        var intersect = false;\n
        switch(this.type) {\n
            case OpenLayers.Filter.Spatial.BBOX:\n
            case OpenLayers.Filter.Spatial.INTERSECTS:\n
                if(feature.geometry) {\n
                    var geom = this.value;\n
                    if(this.value.CLASS_NAME == "OpenLayers.Bounds") {\n
                        geom = this.value.toGeometry();\n
                    }\n
                    if(feature.geometry.intersects(geom)) {\n
                        intersect = true;\n
                    }\n
                }\n
                break;\n
            default:\n
                throw new Error(\'evaluate is not implemented for this filter type.\');\n
        }\n
        return intersect;\n
    },\n
\n
    /**\n
     * APIMethod: clone\n
     * Clones this filter.\n
     * \n
     * Returns:\n
     * {<OpenLayers.Filter.Spatial>} Clone of this filter.\n
     */\n
    clone: function() {\n
        var options = OpenLayers.Util.applyDefaults({\n
            value: this.value && this.value.clone && this.value.clone()\n
        }, this);\n
        return new OpenLayers.Filter.Spatial(options);\n
    },\n
    CLASS_NAME: "OpenLayers.Filter.Spatial"\n
});\n
\n
OpenLayers.Filter.Spatial.BBOX = "BBOX";\n
OpenLayers.Filter.Spatial.INTERSECTS = "INTERSECTS";\n
OpenLayers.Filter.Spatial.DWITHIN = "DWITHIN";\n
OpenLayers.Filter.Spatial.WITHIN = "WITHIN";\n
OpenLayers.Filter.Spatial.CONTAINS = "CONTAINS";\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>3523</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
