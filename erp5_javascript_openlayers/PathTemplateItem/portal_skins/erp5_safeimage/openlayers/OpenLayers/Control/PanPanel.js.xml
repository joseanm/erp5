<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.8</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>PanPanel.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/Control/Panel.js\n
 * @requires OpenLayers/Control/Pan.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Control.PanPanel\n
 * The PanPanel is visible control for panning the map North, South, East or\n
 * West in small steps. By default it is drawn in the top left corner of the\n
 * map.\n
 *\n
 * Note: \n
 * If you wish to use this class with the default images and you want \n
 *       it to look nice in ie6, you should add the following, conditionally\n
 *       added css stylesheet to your HTML file:\n
 * \n
 * (code)\n
 * <!--[if lte IE 6]>\n
 *   <link rel="stylesheet" href="../theme/default/ie6-style.css" type="text/css" />\n
 * <![endif]-->\n
 * (end)\n
 *\n
 * Inherits from:\n
 *  - <OpenLayers.Control.Panel> \n
 */\n
OpenLayers.Control.PanPanel = OpenLayers.Class(OpenLayers.Control.Panel, {\n
\n
    /** \n
     * APIProperty: slideFactor\n
     * {Integer} Number of pixels by which we\'ll pan the map in any direction \n
     *     on clicking the arrow buttons, defaults to 50.  If you want to pan\n
     *     by some ratio of the map dimensions, use <slideRatio> instead.\n
     */\n
    slideFactor: 50,\n
\n
    /** \n
     * APIProperty: slideRatio\n
     * {Number} The fraction of map width/height by which we\'ll pan the map            \n
     *     on clicking the arrow buttons.  Default is null.  If set, will\n
     *     override <slideFactor>. E.g. if slideRatio is .5, then Pan Up will\n
     *     pan up half the map height. \n
     */\n
    slideRatio: null,\n
\n
    /**\n
     * Constructor: OpenLayers.Control.PanPanel \n
     * Add the four directional pan buttons.\n
     *\n
     * Parameters:\n
     * options - {Object} An optional object whose properties will be used\n
     *     to extend the control.\n
     */\n
    initialize: function(options) {\n
        OpenLayers.Control.Panel.prototype.initialize.apply(this, [options]);\n
        var options = {\n
            slideFactor: this.slideFactor,\n
            slideRatio: this.slideRatio\n
        };\n
        this.addControls([\n
            new OpenLayers.Control.Pan(OpenLayers.Control.Pan.NORTH, options),\n
            new OpenLayers.Control.Pan(OpenLayers.Control.Pan.SOUTH, options),\n
            new OpenLayers.Control.Pan(OpenLayers.Control.Pan.EAST, options),\n
            new OpenLayers.Control.Pan(OpenLayers.Control.Pan.WEST, options)\n
        ]);\n
    },\n
\n
    CLASS_NAME: "OpenLayers.Control.PanPanel"\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2578</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
