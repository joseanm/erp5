<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.82</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>Pan.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
/**\n
 * @requires OpenLayers/Control.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Control.Pan\n
 * The Pan control is a single button to pan the map in one direction. For\n
 * a more complete control see <OpenLayers.Control.PanPanel>.\n
 *\n
 * Inherits from:\n
 *  - <OpenLayers.Control>\n
 */\n
OpenLayers.Control.Pan = OpenLayers.Class(OpenLayers.Control, {\n
\n
    /** \n
     * APIProperty: slideFactor\n
     * {Integer} Number of pixels by which we\'ll pan the map in any direction \n
     *     on clicking the arrow buttons, defaults to 50.  If you want to pan\n
     *     by some ratio of the map dimensions, use <slideRatio> instead.\n
     */\n
    slideFactor: 50,\n
\n
    /** \n
     * APIProperty: slideRatio\n
     * {Number} The fraction of map width/height by which we\'ll pan the map            \n
     *     on clicking the arrow buttons.  Default is null.  If set, will\n
     *     override <slideFactor>. E.g. if slideRatio is .5, then Pan Up will\n
     *     pan up half the map height. \n
     */\n
    slideRatio: null,\n
\n
    /** \n
     * Property: direction\n
     * {String} in {\'North\', \'South\', \'East\', \'West\'}\n
     */\n
    direction: null,\n
\n
    /**\n
     * Property: type\n
     * {String} The type of <OpenLayers.Control> -- When added to a \n
     *     <Control.Panel>, \'type\' is used by the panel to determine how to \n
     *     handle our events.\n
     */\n
    type: OpenLayers.Control.TYPE_BUTTON,\n
\n
    /**\n
     * Constructor: OpenLayers.Control.Pan \n
     * Control which handles the panning (in any of the cardinal directions)\n
     *     of the map by a set px distance. \n
     *\n
     * Parameters:\n
     * direction - {String} The direction this button should pan.\n
     * options - {Object} An optional object whose properties will be used\n
     *     to extend the control.\n
     */\n
    initialize: function(direction, options) {\n
    \n
        this.direction = direction;\n
        this.CLASS_NAME += this.direction;\n
        \n
        OpenLayers.Control.prototype.initialize.apply(this, [options]);\n
    },\n
    \n
    /**\n
     * Method: trigger\n
     */\n
    trigger: function(){\n
    \n
        var getSlideFactor = OpenLayers.Function.bind(function (dim) {\n
            return this.slideRatio ?\n
                this.map.getSize()[dim] * this.slideRatio :\n
                this.slideFactor;\n
        }, this);\n
\n
        switch (this.direction) {\n
            case OpenLayers.Control.Pan.NORTH: \n
                this.map.pan(0, -getSlideFactor("h"));\n
                break;\n
            case OpenLayers.Control.Pan.SOUTH: \n
                this.map.pan(0, getSlideFactor("h"));\n
                break;\n
            case OpenLayers.Control.Pan.WEST: \n
                this.map.pan(-getSlideFactor("w"), 0);\n
                break;\n
            case OpenLayers.Control.Pan.EAST: \n
                this.map.pan(getSlideFactor("w"), 0);\n
                break;\n
        }\n
    },\n
\n
    CLASS_NAME: "OpenLayers.Control.Pan"\n
});\n
\n
OpenLayers.Control.Pan.NORTH = "North";\n
OpenLayers.Control.Pan.SOUTH = "South";\n
OpenLayers.Control.Pan.EAST = "East";\n
OpenLayers.Control.Pan.WEST = "West";\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>3270</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
