<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts53684100.79</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>KaMapCache.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* Copyright (c) 2006-2012 by OpenLayers Contributors (see authors.txt for \n
 * full list of contributors). Published under the 2-clause BSD license.\n
 * See license.txt in the OpenLayers distribution or repository for the\n
 * full text of the license. */\n
\n
\n
/**\n
 * @requires OpenLayers/Layer/Grid.js\n
 * @requires OpenLayers/Layer/KaMap.js\n
 */\n
\n
/**\n
 * Class: OpenLayers.Layer.KaMapCache\n
 * \n
 * This class is designed to talk directly to a web-accessible ka-Map\n
 * cache generated by the precache2.php script.\n
 * \n
 * To create a a new KaMapCache layer, you must indicate also the "i" parameter\n
 * (that will be used to calculate the file extension), and another special\n
 * parameter, object names "metaTileSize", with "h" (height) and "w" (width)\n
 * properties.\n
 * \n
 *     // Create a new kaMapCache layer. \n
 *     var kamap_base = new OpenLayers.Layer.KaMapCache(\n
 *         "Satellite",\n
 *         "http://www.example.org/web/acessible/cache",\n
 *         {g: "satellite", map: "world", i: \'png24\', metaTileSize: {w: 5, h: 5} }\n
 *       );\n
 *    \n
 *     // Create an kaMapCache overlay layer (using "isBaseLayer: false"). \n
 *     // Forces the output to be a "gif", using the "i" parameter.\n
 *     var kamap_overlay = new OpenLayers.Layer.KaMapCache(\n
 *         "Streets",\n
 *         "http://www.example.org/web/acessible/cache",\n
 *         {g: "streets", map: "world", i: "gif", metaTileSize: {w: 5, h: 5} },\n
 *         {isBaseLayer: false}\n
 *       );\n
 *\n
 * The cache URLs must look like: \n
 *   var/cache/World/50000/Group_Name/def/t-440320/l20480\n
 * \n
 * This means that the cache generated via tile.php will *not* work with\n
 *     this class, and should instead use the KaMap layer.\n
 *\n
 * More information is available in Ticket #1518.\n
 * \n
 * Inherits from:\n
 *  - <OpenLayers.Layer.KaMap>\n
 *  - <OpenLayers.Layer.Grid>\n
 */\n
OpenLayers.Layer.KaMapCache = OpenLayers.Class(OpenLayers.Layer.KaMap, {\n
\n
    /**\n
     * Constant: IMAGE_EXTENSIONS\n
     * {Object} Simple hash map to convert format to extension.\n
     */\n
    IMAGE_EXTENSIONS: {\n
        \'jpeg\': \'jpg\',\n
        \'gif\' : \'gif\',\n
        \'png\' : \'png\',\n
        \'png8\' : \'png\',\n
        \'png24\' : \'png\',\n
        \'dithered\' : \'png\'\n
    },\n
    \n
    /**\n
     * Constant: DEFAULT_FORMAT\n
     * {Object} Simple hash map to convert format to extension.\n
     */\n
    DEFAULT_FORMAT: \'jpeg\',\n
    \n
    /**\n
     * Constructor: OpenLayers.Layer.KaMapCache\n
     * \n
     * Parameters:\n
     * name - {String}\n
     * url - {String}\n
     * params - {Object} Parameters to be sent to the HTTP server in the\n
     *    query string for the tile. The format can be set via the \'i\'\n
     *    parameter (defaults to jpg) , and the map should be set via \n
     *    the \'map\' parameter. It has been reported that ka-Map may behave\n
     *    inconsistently if your format parameter does not match the format\n
     *    parameter configured in your config.php. (See ticket #327 for more\n
     *    information.)\n
     * options - {Object} Additional options for the layer. Any of the \n
     *     APIProperties listed on this layer, and any layer types it\n
     *     extends, can be overridden through the options parameter. \n
     */\n
    initialize: function(name, url, params, options) {\n
        OpenLayers.Layer.KaMap.prototype.initialize.apply(this, arguments);\n
        this.extension = this.IMAGE_EXTENSIONS[this.params.i.toLowerCase() || this.DEFAULT_FORMAT];\n
    },\n
\n
    /**\n
     * Method: getURL\n
     * \n
     * Parameters:\n
     * bounds - {<OpenLayers.Bounds>} \n
     * \n
     * Returns:\n
     * {String} A string with the layer\'s url and parameters and also the \n
     *          passed-in bounds and appropriate tile size specified as \n
     *          parameters\n
     */\n
    getURL: function (bounds) {\n
        bounds = this.adjustBounds(bounds);\n
        var mapRes = this.map.getResolution();\n
        var scale = Math.round((this.map.getScale() * 10000)) / 10000;\n
        var pX = Math.round(bounds.left / mapRes);\n
        var pY = -Math.round(bounds.top / mapRes);\n
\n
        var metaX = Math.floor(pX / this.tileSize.w / this.params.metaTileSize.w) * this.tileSize.w * this.params.metaTileSize.w;\n
        var metaY = Math.floor(pY / this.tileSize.h / this.params.metaTileSize.h) * this.tileSize.h * this.params.metaTileSize.h;\n
    \n
        var components = [\n
            "/",\n
            this.params.map,\n
            "/",\n
            scale,\n
            "/",\n
            this.params.g.replace(/\\s/g, \'_\'),\n
            "/def/t", \n
            metaY,\n
            "/l",\n
            metaX,\n
            "/t",\n
            pY,\n
            "l",\n
            pX,\n
            ".",\n
            this.extension\n
          ];\n
\n
        var url = this.url;\n
\n
        if (OpenLayers.Util.isArray(url)) {\n
            url = this.selectUrl(components.join(\'\'), url);\n
        }\n
        return url + components.join("");\n
    },\n
\n
    CLASS_NAME: "OpenLayers.Layer.KaMapCache"\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>4875</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
